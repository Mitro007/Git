
Syntax : git <sub-command> <arguments>


-> git init : to initialize a GIT repository (creates .git folder)

-> git config --list : to list all defined configurations
      -> git config user.name : prints username
      -> git config user.email : prints email id

-> git config --global user.name <user_name>
   git config --global user.email <user_email>
   
-> git config --local user.name <user_name>
   git config --local user.email <user_email>

-> git clone url : to clone the GIT repository

-> git status : gives information about tracked files as well as untracked files.

-> git ls-files : print all tracked files

-> git add <files> : 

-> git commit -m(--message) <commit_message>

-> git log : lists all the commits in the current branch, with the latest commit at the top, followed by its parent on the top, and so on.
      
      Flags :
         (a). abbrev-commit : displays enough characters to uniquely identify a commit
         (b). pretty=oneline : to not display author and time
         (c). --all : displays commit history of all the branches in the repository
         (d). --graph : displays commit history as a graph (* -> commit, | -> pointer to parent commit, DAG -> Directed Acyclic Graph)
         (e). 
      
      git log <file_name> : to display commit history of specified file    


-> git branch : to list all the branches
      git branch <branch_name> : to create a new branch
      git branch -D <branch_name> : to delete a local branch
      git switch <branch_name> : to switch to specified branch
      git branch -d <branch_name> : to delete a remote branch

-> git reflog

-> git checkout

-> git <sub-command> --help / git help <sub-command> : documentation of specified sub-command

-> git config --global core.editor "code -w" : use VS Code as default editor

-> git diff : compares the version that Git has in its index with the version of the file in the working directory i.e by default Git 
   compares the Index with the working directory.
      
      Flags :
         (a). --cached/--staged : to compare index and the local repository

      git diff <file_name> : compare specified file in index & working directory   
      git diff <branch_name_1> <branch_name_2> : to compare two branches  
      git diff <commit_id_1> <commit_id_2> : to compare two commits 

